	<h2 class="title">  </h2>

	{{!-- ================================ --}}
	<section>
		<div class="card">
			<div class="card-body">
<pre>
git init                                                                  - Створіть порожнє сховище Git в папці, або повторно ініціалізуйте існуюче
git remote add origin http://github.com/...(e333)/...(test) .git          - Додати певний репозиторій до вашого GIT-проекту
git clone http://github.com/...(e333)/...(test) .git                      - Завантажити певний репозиторый в папку в якій ви знаходитесь та автоматично створити <remote_name> ->(ORIGIN)
git checkout -b gilka1 (master або test)                                  - створити нову гілку від тої в якій ви знаходитесь та перейти до неї
git checkout -b dev (development -> розробка)                             - створити нову гілку від тої в якій ви знаходитесь та перейти до неї
git checkout gilka1                                                       - просто перейти до вже створеної раніше гілки
git remote show origin                                                    - показати до якого репозиторія належить даний проект
git remote remove origin                                                  - відключити даний проект від іншого репозиторія
git remote add origin https://github.com/EvgPro333/ЗМІНИ(ProjectName).git - підключити даний проект до свого чи іншого репозиторія
git add .                                                                 - оновити всі файли
cd ../                                                                    - вийти з данної папки в попередню
git branch -a                                                             - показати всі гілки (локальні та віддалені)
git branch -r                                                             - показати всі віддалені гілки
git branch -d gilka1                                                      - видалити вказану гілку будуть заперечення на мердж і т.п.
git branch -D gilka1                                                      - видалити вказану гілку по при всі заперечення на мердж і т.п.
git push origin -d gilka1                                                 - видалити вказану гілку з репозиторію
</pre>









<pre>
коли слонував проект то якщо є (package-lock.json) видали його та створи новий (npm init)

npm -v  або nodejs -v  або node -v                                        - перевірка працездатності NodeJS та NPM та дізнатися версію NodeJS та NPM
npm ping                                                                  - перевірка працездатності NPM та ынтернет з'єднання
npm init                                                                  - команда ініціалізації NPM проєкту в поточній папці
npm install react express    (npm i react express)                        - встановлення пакетів в NPM проєкт (встановлення 2х технологій: react та express(пакетів)багато папок в папці node_modules )(відображається в dependencies)
npm install                  (npm i)                                      - багато папок в папці node_modules (встановлення технологій (пакетів))(відображається в dependencies)
npm install -D moment        (npm i -D moment)                            - встановлення dev пакетів в NPM проєкт багато папок в папці node_modules (встановлення 1 технології: moment (пакетів для devDependencies))(відображається в devDependencies)
npm install -g react         (npm i -g react)                             - встановлення глобально пакетів в NPM проєкт багато папок в папці node_modules (встановлення 1 технології: react (пакетів для devDependencies))(відображається в devDependencies)
npm ls                                                                    - показати список пакетів
npm update react                                                          - обновити пакети (в даний момент пакет react)
npm update                                                                - обновити всі пакети
npm cache verify                                                          - провести дыагностику вашого NPM проєкту (очистити кеш проєкта)
npm doctor                                                                - провести дыагностику вашого NPM проєкту
npm audit fix                                                             - провести дыагностику вашого NPM проєкту коли ми в пакедж жейсон змінимо версію і відбудеться конфлікт
npm audit fix --force                                                     - коли ми в пакедж жейсон змінимо версію і відбудеться конфлікт падтвердити fix
npm uninstall -g react         (npm i -g react)                           - видалити глобально пакет
npm prune                                                                 - видалити пакети котры не використовуються в пакедж джейсон
npm outdated                                                              - показати список застарілих пакетів котрі треба оновити
npm prefix             (npm prefix -g)                                    - подивитися pwdдо папки вашого NPM проєкту
npm pack react                                                            - створити архів певного ракету для передачі колезі (завантажити вихідний код певного пакету) 
npm repo react                                                            - відкрити GitHub проєкт з кодом певного пакету(швиденько прочитати докуменацію про реакт в GitHub)
</pre>





			</div>
		</div> 
		{{!-- ===================================== --}}

		<div class="card">
			<div class="card-body">

			</div>
			</div>
		{{!-- ===================================== --}}
		
	</section>

	<section>
		<div class="card">
		<div class="card-body">

		</div>
	</div> 
	{{!-- ===================================== --}}

	<div class="card">
	<div class="card-body">

	</div>
	</div>
	{{!-- ===================================== --}}
	
	</section>
	